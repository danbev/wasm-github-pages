name: Deploy to GitHub Pages
on:
  push:
    branches: ["main"]
  
  workflow_dispatch:
permissions:
  contents: read
  pages: write
  id-token: write
concurrency:
  group: "pages"
  cancel-in-progress: false
jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Create staging directory
        run: mkdir -p staging
      
      - name: Create .nojekyll file in staging directory
        run: touch staging/.nojekyll
        
      - name: Copy application files
        run: |
          # Copy add-wasm application
          mkdir -p staging/add-wasm
          cp -v add-wasm/add.wasm staging/add-wasm/
          cp -v add-wasm/index.html staging/add-wasm/

          # Copy whisper-command - use recursive to make sure all files are copied
          mkdir -p staging/whisper-command
          cp whisper-command/index.html staging/whisper-command/
          cp whisper-command/command.js staging/whisper-command/
          cp whisper-command/helpers.js staging/whisper-command/
          cp whisper-command/libcommand.worker.js staging/whisper-command/

          # Copy root index.html
          cp -v index.html staging/
          cp -v coi-serviceworker.js staging/
          cp -v coi-serviceworker.js staging/whisper-command/

      - name: Create headers.json file
        run: |
          mkdir -p staging/.github/pages
          cat > staging/.github/pages/headers.json << 'EOF'
          {
            "**/*.wasm": {
              "Content-Type": "application/wasm",
              "Cross-Origin-Embedder-Policy": "require-corp",
              "Cross-Origin-Opener-Policy": "same-origin"
            },
            "**/*.js": {
              "Cross-Origin-Embedder-Policy": "require-corp",
              "Cross-Origin-Opener-Policy": "same-origin"
            },
            "**/*.html": {
              "Cross-Origin-Embedder-Policy": "require-corp",
              "Cross-Origin-Opener-Policy": "same-origin"
            },
            "/*": {
              "Cross-Origin-Embedder-Policy": "require-corp",
              "Cross-Origin-Opener-Policy": "same-origin"
            }
          }
          EOF

      - name: List files in staging directory (for debugging)
        run: |
          echo "Files in staging directory:"
          find staging -type f | sort

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./staging

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
